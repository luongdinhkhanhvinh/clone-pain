# Use Node.js 18 Alpine as base image
FROM node:18-alpine AS base

# Install pnpm and PM2 globally
RUN npm install -g pnpm pm2

# Install dependencies only when needed
FROM base AS deps
RUN apk add --no-cache libc6-compat python3 make g++
WORKDIR /app

# Copy only package manager files for better cache
COPY package.json pnpm-lock.yaml* ./
COPY server/package.json ./server/
RUN pnpm install --frozen-lockfile --prod

# Build the application
FROM base AS builder
WORKDIR /app

COPY --from=deps /app/node_modules ./node_modules
COPY server ./server
COPY package.json ./
COPY tsconfig.server.json ./

RUN pnpm run build:server

# Production image
FROM base AS runner
WORKDIR /app

ENV NODE_ENV=production
ENV NEXT_TELEMETRY_DISABLED=1

RUN addgroup --system --gid 1001 nodejs
RUN adduser --system --uid 1001 nextjs

# Create necessary directories
RUN mkdir -p /app/uploads
RUN chown -R nextjs:nodejs /app/uploads

COPY --from=builder /app/node_modules ./node_modules
COPY --from=builder /app/server ./server
COPY --from=builder /app/package.json ./

# Create a simple healthcheck script
RUN echo 'require("http").createServer((req, res) => { res.end("OK") }).listen(3001)' > healthcheck.js

EXPOSE 3001

USER nextjs

CMD ["pm2-runtime", "start", "server/index.js", "--name", "backend"]
